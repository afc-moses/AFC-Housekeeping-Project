{"ast":null,"code":"var _jsxFileName = \"/Users/mosesle/Desktop/afc-housekeeping-project/frontend/src/HousekeepingDashboard.js\",\n  _s = $RefreshSig$();\n// frontend/src/HousekeepingDashboard.js\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction HousekeepingDashboard() {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const [periodType, setPeriodType] = useState('week'); // default period type\n  const [startDate, setStartDate] = useState(new Date().toISOString().slice(0, 10));\n  const [endDate, setEndDate] = useState('');\n\n  // Function to calculate end date based on selected period type and start date\n  const calculateEndDate = (start, period) => {\n    const startDt = new Date(start);\n    let endDt = new Date(start);\n    if (period === 'week') {\n      endDt.setDate(startDt.getDate() + 6);\n    } else if (period === 'month') {\n      endDt.setMonth(startDt.getMonth() + 1);\n      endDt.setDate(endDt.getDate() - 1);\n    } else if (period === 'semiannual') {\n      endDt.setMonth(startDt.getMonth() + 6);\n      endDt.setDate(endDt.getDate() - 1);\n    } else if (period === 'year') {\n      endDt.setFullYear(startDt.getFullYear() + 1);\n      endDt.setDate(endDt.getDate() - 1);\n    }\n    return endDt.toISOString().slice(0, 10);\n  };\n\n  // Update endDate whenever startDate or periodType changes\n  useEffect(() => {\n    const newEndDate = calculateEndDate(startDate, periodType);\n    setEndDate(newEndDate);\n  }, [startDate, periodType]);\n\n  // Fetch reservations from the backend\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/reservations').then(response => setReservations(response.data)).catch(error => console.error('Error fetching reservations:', error));\n  }, []);\n\n  // Helper: Calculate overlapping nights between a reservation and the selected period.\n  // We assume that the number of nights is the number of full days between overlapStart and overlapEnd.\n  const calculateOverlapNights = (resCheckIn, resCheckOut, periodStart, periodEnd) => {\n    const start = new Date(periodStart);\n    const end = new Date(periodEnd);\n    const checkIn = new Date(resCheckIn);\n    const checkOut = new Date(resCheckOut);\n    // Determine the overlapping period boundaries\n    const overlapStart = new Date(Math.max(start, checkIn));\n    const overlapEnd = new Date(Math.min(end, checkOut));\n    if (overlapStart >= overlapEnd) return 0;\n    const diffTime = overlapEnd - overlapStart;\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays;\n  };\n\n  // Compute total room nights for each reservation based on current period.\n  // If a reservation doesn't overlap the period, its room nights will be 0.\n  const reservationRoomNights = useMemo(() => {\n    return reservations.map(res => {\n      if (res.checkIn && res.checkOut) {\n        const overlap = calculateOverlapNights(res.checkIn, res.checkOut, startDate, endDate);\n        const roomCount = res.rooms ? res.rooms.length : 1;\n        return overlap * roomCount;\n      }\n      return 0;\n    });\n  }, [reservations, startDate, endDate]);\n\n  // Create labels for each reservation: show customer name and check-in date.\n  const labels = useMemo(() => {\n    return reservations.map((res, idx) => {\n      if (res.customerName && res.checkIn) {\n        return `${res.customerName} (${res.checkIn})`;\n      }\n      return `Reservation ${idx + 1}`;\n    });\n  }, [reservations]);\n\n  // Build chart data using memoization\n  const chartData = useMemo(() => {\n    return {\n      labels: labels.length > 0 ? labels : ['No Data'],\n      datasets: [{\n        label: 'Total Room Nights',\n        data: reservationRoomNights.length > 0 ? reservationRoomNights : [0],\n        backgroundColor: 'rgba(54, 162, 235, 0.6)'\n      }]\n    };\n  }, [labels, reservationRoomNights]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '900px',\n      margin: 'auto',\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        color: '#333'\n      },\n      children: \"Housekeeping Dashboard: Reservation Room Nights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginRight: '8px'\n          },\n          children: \"Period Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: periodType,\n          onChange: e => setPeriodType(e.target.value),\n          style: {\n            padding: '6px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"week\",\n            children: \"Weekly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"month\",\n            children: \"Monthly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"semiannual\",\n            children: \"Semi-Annual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year\",\n            children: \"Yearly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginRight: '8px'\n          },\n          children: \"Start Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value),\n          style: {\n            padding: '6px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px',\n        color: '#555'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Period:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), \" \", startDate, \" to \", endDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: {\n        plugins: {\n          legend: {\n            display: false\n          },\n          title: {\n            display: true,\n            text: 'Each Reservation Total Room Nights'\n          }\n        },\n        responsive: true,\n        scales: {\n          x: {\n            ticks: {\n              autoSkip: false,\n              maxRotation: 90,\n              minRotation: 45\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'Room Nights'\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(HousekeepingDashboard, \"bR7XH/uJyKu1mh2Ap8regLk8+jo=\");\n_c = HousekeepingDashboard;\nexport default HousekeepingDashboard;\nvar _c;\n$RefreshReg$(_c, \"HousekeepingDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","HousekeepingDashboard","_s","reservations","setReservations","periodType","setPeriodType","startDate","setStartDate","Date","toISOString","slice","endDate","setEndDate","calculateEndDate","start","period","startDt","endDt","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","newEndDate","get","then","response","data","catch","error","console","calculateOverlapNights","resCheckIn","resCheckOut","periodStart","periodEnd","end","checkIn","checkOut","overlapStart","Math","max","overlapEnd","min","diffTime","diffDays","floor","reservationRoomNights","map","res","overlap","roomCount","rooms","length","labels","idx","customerName","chartData","datasets","label","backgroundColor","style","maxWidth","margin","padding","fontFamily","children","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","display","flexWrap","justifyContent","marginRight","value","onChange","e","target","type","options","plugins","legend","title","text","responsive","scales","x","ticks","autoSkip","maxRotation","minRotation","y","beginAtZero","_c","$RefreshReg$"],"sources":["/Users/mosesle/Desktop/afc-housekeeping-project/frontend/src/HousekeepingDashboard.js"],"sourcesContent":["// frontend/src/HousekeepingDashboard.js\nimport React, { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Register Chart.js components\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction HousekeepingDashboard() {\n  const [reservations, setReservations] = useState([]);\n  const [periodType, setPeriodType] = useState('week'); // default period type\n  const [startDate, setStartDate] = useState(new Date().toISOString().slice(0, 10));\n  const [endDate, setEndDate] = useState('');\n\n  // Function to calculate end date based on selected period type and start date\n  const calculateEndDate = (start, period) => {\n    const startDt = new Date(start);\n    let endDt = new Date(start);\n    if (period === 'week') {\n      endDt.setDate(startDt.getDate() + 6);\n    } else if (period === 'month') {\n      endDt.setMonth(startDt.getMonth() + 1);\n      endDt.setDate(endDt.getDate() - 1);\n    } else if (period === 'semiannual') {\n      endDt.setMonth(startDt.getMonth() + 6);\n      endDt.setDate(endDt.getDate() - 1);\n    } else if (period === 'year') {\n      endDt.setFullYear(startDt.getFullYear() + 1);\n      endDt.setDate(endDt.getDate() - 1);\n    }\n    return endDt.toISOString().slice(0, 10);\n  };\n\n  // Update endDate whenever startDate or periodType changes\n  useEffect(() => {\n    const newEndDate = calculateEndDate(startDate, periodType);\n    setEndDate(newEndDate);\n  }, [startDate, periodType]);\n\n  // Fetch reservations from the backend\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/reservations')\n      .then(response => setReservations(response.data))\n      .catch(error => console.error('Error fetching reservations:', error));\n  }, []);\n\n  // Helper: Calculate overlapping nights between a reservation and the selected period.\n  // We assume that the number of nights is the number of full days between overlapStart and overlapEnd.\n  const calculateOverlapNights = (resCheckIn, resCheckOut, periodStart, periodEnd) => {\n    const start = new Date(periodStart);\n    const end = new Date(periodEnd);\n    const checkIn = new Date(resCheckIn);\n    const checkOut = new Date(resCheckOut);\n    // Determine the overlapping period boundaries\n    const overlapStart = new Date(Math.max(start, checkIn));\n    const overlapEnd = new Date(Math.min(end, checkOut));\n    if (overlapStart >= overlapEnd) return 0;\n    const diffTime = overlapEnd - overlapStart;\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays;\n  };\n\n  // Compute total room nights for each reservation based on current period.\n  // If a reservation doesn't overlap the period, its room nights will be 0.\n  const reservationRoomNights = useMemo(() => {\n    return reservations.map(res => {\n      if (res.checkIn && res.checkOut) {\n        const overlap = calculateOverlapNights(res.checkIn, res.checkOut, startDate, endDate);\n        const roomCount = res.rooms ? res.rooms.length : 1;\n        return overlap * roomCount;\n      }\n      return 0;\n    });\n  }, [reservations, startDate, endDate]);\n\n  // Create labels for each reservation: show customer name and check-in date.\n  const labels = useMemo(() => {\n    return reservations.map((res, idx) => {\n      if (res.customerName && res.checkIn) {\n        return `${res.customerName} (${res.checkIn})`;\n      }\n      return `Reservation ${idx + 1}`;\n    });\n  }, [reservations]);\n\n  // Build chart data using memoization\n  const chartData = useMemo(() => {\n    return {\n      labels: labels.length > 0 ? labels : ['No Data'],\n      datasets: [\n        {\n          label: 'Total Room Nights',\n          data: reservationRoomNights.length > 0 ? reservationRoomNights : [0],\n          backgroundColor: 'rgba(54, 162, 235, 0.6)',\n        }\n      ]\n    };\n  }, [labels, reservationRoomNights]);\n\n  return (\n    <div style={{ maxWidth: '900px', margin: 'auto', padding: '20px', fontFamily: 'Arial, sans-serif' }}>\n      <h2 style={{ textAlign: 'center', color: '#333' }}>Housekeeping Dashboard: Reservation Room Nights</h2>\n      <div style={{ marginBottom: '20px', display: 'flex', flexWrap: 'wrap', justifyContent: 'space-around' }}>\n        <div style={{ marginBottom: '10px' }}>\n          <label style={{ marginRight: '8px' }}>Period Type:</label>\n          <select value={periodType} onChange={e => setPeriodType(e.target.value)} style={{ padding: '6px' }}>\n            <option value=\"week\">Weekly</option>\n            <option value=\"month\">Monthly</option>\n            <option value=\"semiannual\">Semi-Annual</option>\n            <option value=\"year\">Yearly</option>\n          </select>\n        </div>\n        <div style={{ marginBottom: '10px' }}>\n          <label style={{ marginRight: '8px' }}>Start Date:</label>\n          <input type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)} style={{ padding: '6px' }}/>\n        </div>\n      </div>\n      <div style={{ textAlign: 'center', marginBottom: '20px', color: '#555' }}>\n        <strong>Period:</strong> {startDate} to {endDate}\n      </div>\n      <Bar data={chartData} options={{\n        plugins: {\n          legend: { display: false },\n          title: {\n            display: true,\n            text: 'Each Reservation Total Room Nights'\n          }\n        },\n        responsive: true,\n        scales: {\n          x: {\n            ticks: {\n              autoSkip: false,\n              maxRotation: 90,\n              minRotation: 45,\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: { display: true, text: 'Room Nights' }\n          }\n        }\n      }}/>\n    </div>\n  );\n}\n\nexport default HousekeepingDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}