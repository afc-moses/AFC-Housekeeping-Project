{"ast":null,"code":"var _jsxFileName = \"/Users/mosesle/Desktop/afc-housekeeping-project/frontend/src/RoomAvailability.js\",\n  _s = $RefreshSig$();\n// frontend/src/RoomAvailabilityPeriod.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoomAvailabilityPeriod() {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const [cleaningSchedule, setCleaningSchedule] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [datesInRange, setDatesInRange] = useState([]);\n\n  // List of all hotel rooms\n  const hotelRooms = ['105', '107', '109', '110', '111', '112', '113', '114', '115', '116', '117', '118', '119', '120', '205', '206', '207', '208', '209', '210', '211', '212', '213', '214', '215', '216', '217', '218', '219', '220'];\n\n  // Fetch reservations and cleaning tasks from the backend\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/reservations').then(response => setReservations(response.data)).catch(error => console.error('Error fetching reservations:', error));\n    axios.get('http://localhost:5001/api/cleaning-schedule').then(response => setCleaningSchedule(response.data)).catch(error => console.error('Error fetching cleaning schedule:', error));\n  }, []);\n\n  // Helper: get all dates in range (inclusive)\n  const getDatesInRange = (start, end) => {\n    const startDt = new Date(start);\n    const endDt = new Date(end);\n    const dates = [];\n    let current = new Date(startDt);\n    while (current <= endDt) {\n      dates.push(current.toISOString().slice(0, 10));\n      current.setDate(current.getDate() + 1);\n    }\n    return dates;\n  };\n\n  // When user clicks \"Show Availability\"\n  const handleShowAvailability = () => {\n    if (startDate && endDate && startDate <= endDate) {\n      const dates = getDatesInRange(startDate, endDate);\n      setDatesInRange(dates);\n    } else {\n      alert(\"Please enter a valid date range.\");\n    }\n  };\n\n  // Check if a room is available on a given date\n  const isRoomAvailableOn = (room, date) => {\n    // Iterate over each reservation for the room\n    for (let res of reservations) {\n      if (res.rooms.includes(room)) {\n        // If the date falls within the reservation period [checkIn, checkOut)\n        if (date >= res.checkIn && date < res.checkOut) {\n          return false;\n        }\n        // If the date is exactly the checkOut date, room is available only if cleaned.\n        if (date === res.checkOut) {\n          const cleaningTask = cleaningSchedule.find(task => task.reservationId === res.id && task.cleaningDate === date);\n          if (!(cleaningTask && cleaningTask.completed)) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '90%',\n      margin: 'auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Room Availability for a Selected Period\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value),\n          style: {\n            marginLeft: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: '20px'\n        },\n        children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value),\n          style: {\n            marginLeft: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShowAvailability,\n        style: {\n          marginLeft: '20px',\n          padding: '8px 16px'\n        },\n        children: \"Show Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), datesInRange.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"8\",\n      style: {\n        borderCollapse: 'collapse',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), datesInRange.map(date => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: date\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: hotelRooms.map(room => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: room\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), datesInRange.map(date => {\n            const available = isRoomAvailableOn(room, date);\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: available ? '#d4edda' : '#f8d7da',\n                textAlign: 'center'\n              },\n              children: available ? 'Available' : 'Not Available'\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this);\n          })]\n        }, room, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomAvailabilityPeriod, \"8qUNZ78+6gCvxnO1/lH/qfX9iPw=\");\n_c = RoomAvailabilityPeriod;\nexport default RoomAvailabilityPeriod;\nvar _c;\n$RefreshReg$(_c, \"RoomAvailabilityPeriod\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","RoomAvailabilityPeriod","_s","reservations","setReservations","cleaningSchedule","setCleaningSchedule","startDate","setStartDate","endDate","setEndDate","datesInRange","setDatesInRange","hotelRooms","get","then","response","data","catch","error","console","getDatesInRange","start","end","startDt","Date","endDt","dates","current","push","toISOString","slice","setDate","getDate","handleShowAvailability","alert","isRoomAvailableOn","room","date","res","rooms","includes","checkIn","checkOut","cleaningTask","find","task","reservationId","id","cleaningDate","completed","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","value","onChange","e","target","marginLeft","onClick","length","border","cellPadding","borderCollapse","width","map","available","backgroundColor","textAlign","_c","$RefreshReg$"],"sources":["/Users/mosesle/Desktop/afc-housekeeping-project/frontend/src/RoomAvailability.js"],"sourcesContent":["// frontend/src/RoomAvailabilityPeriod.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction RoomAvailabilityPeriod() {\n  const [reservations, setReservations] = useState([]);\n  const [cleaningSchedule, setCleaningSchedule] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [datesInRange, setDatesInRange] = useState([]);\n\n  // List of all hotel rooms\n  const hotelRooms = [\n    '105', '107', '109',\n    '110', '111', '112', '113', '114', '115', '116', '117', '118', '119', '120',\n    '205', '206', '207', '208', '209', '210', '211', '212', '213', '214', '215', '216', '217', '218', '219', '220'\n  ];\n\n  // Fetch reservations and cleaning tasks from the backend\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/reservations')\n      .then(response => setReservations(response.data))\n      .catch(error => console.error('Error fetching reservations:', error));\n\n    axios.get('http://localhost:5001/api/cleaning-schedule')\n      .then(response => setCleaningSchedule(response.data))\n      .catch(error => console.error('Error fetching cleaning schedule:', error));\n  }, []);\n\n  // Helper: get all dates in range (inclusive)\n  const getDatesInRange = (start, end) => {\n    const startDt = new Date(start);\n    const endDt = new Date(end);\n    const dates = [];\n    let current = new Date(startDt);\n    while (current <= endDt) {\n      dates.push(current.toISOString().slice(0, 10));\n      current.setDate(current.getDate() + 1);\n    }\n    return dates;\n  };\n\n  // When user clicks \"Show Availability\"\n  const handleShowAvailability = () => {\n    if (startDate && endDate && startDate <= endDate) {\n      const dates = getDatesInRange(startDate, endDate);\n      setDatesInRange(dates);\n    } else {\n      alert(\"Please enter a valid date range.\");\n    }\n  };\n\n  // Check if a room is available on a given date\n  const isRoomAvailableOn = (room, date) => {\n    // Iterate over each reservation for the room\n    for (let res of reservations) {\n      if (res.rooms.includes(room)) {\n        // If the date falls within the reservation period [checkIn, checkOut)\n        if (date >= res.checkIn && date < res.checkOut) {\n          return false;\n        }\n        // If the date is exactly the checkOut date, room is available only if cleaned.\n        if (date === res.checkOut) {\n          const cleaningTask = cleaningSchedule.find(\n            task => task.reservationId === res.id && task.cleaningDate === date\n          );\n          if (!(cleaningTask && cleaningTask.completed)) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  };\n\n  return (\n    <div style={{ maxWidth: '90%', margin: 'auto', padding: '20px' }}>\n      <h2>Room Availability for a Selected Period</h2>\n      <div style={{ marginBottom: '20px' }}>\n        <label>\n          Start Date:\n          <input \n            type=\"date\" \n            value={startDate} \n            onChange={e => setStartDate(e.target.value)} \n            style={{ marginLeft: '8px' }}\n          />\n        </label>\n        <label style={{ marginLeft: '20px' }}>\n          End Date:\n          <input \n            type=\"date\" \n            value={endDate} \n            onChange={e => setEndDate(e.target.value)} \n            style={{ marginLeft: '8px' }}\n          />\n        </label>\n        <button \n          onClick={handleShowAvailability} \n          style={{ marginLeft: '20px', padding: '8px 16px' }}\n        >\n          Show Availability\n        </button>\n      </div>\n      {datesInRange.length > 0 && (\n        <table border=\"1\" cellPadding=\"8\" style={{ borderCollapse: 'collapse', width: '100%' }}>\n          <thead>\n            <tr>\n              <th>Room</th>\n              {datesInRange.map(date => (\n                <th key={date}>{date}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {hotelRooms.map(room => (\n              <tr key={room}>\n                <td>{room}</td>\n                {datesInRange.map(date => {\n                  const available = isRoomAvailableOn(room, date);\n                  return (\n                    <td \n                      key={date} \n                      style={{ \n                        backgroundColor: available ? '#d4edda' : '#f8d7da',\n                        textAlign: 'center'\n                      }}\n                    >\n                      {available ? 'Available' : 'Not Available'}\n                    </td>\n                  );\n                })}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default RoomAvailabilityPeriod;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}