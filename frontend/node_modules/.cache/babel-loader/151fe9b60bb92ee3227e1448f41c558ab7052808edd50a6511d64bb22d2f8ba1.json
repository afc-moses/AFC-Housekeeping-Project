{"ast":null,"code":"var _jsxFileName = \"/Users/mosesle/Desktop/afc-housekeeping-project/frontend/src/RoomAvailability.js\",\n  _s = $RefreshSig$();\n// frontend/src/RoomAvailability.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoomAvailability() {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const [availability, setAvailability] = useState([]);\n\n  // List of all hotel rooms\n  const hotelRooms = ['105', '107', '109', '110', '111', '112', '113', '114', '115', '116', '117', '118', '119', '120', '205', '206', '207', '208', '209', '210', '211', '212', '213', '214', '215', '216', '217', '218', '219', '220'];\n\n  // Fetch reservations from the backend\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/reservations').then(response => setReservations(response.data)).catch(error => console.error('Error fetching reservations:', error));\n  }, []);\n\n  // Calculate availability for each room based on today's date\n  useEffect(() => {\n    const today = new Date();\n    const avail = hotelRooms.map(room => {\n      // Check if the room is reserved today\n      const isReserved = reservations.some(res => {\n        if (!res.checkIn || !res.checkOut) return false;\n        const checkIn = new Date(res.checkIn);\n        const checkOut = new Date(res.checkOut);\n        // If today's date is between checkIn (inclusive) and checkOut (exclusive) and the room is in the reservation's room list, it's occupied\n        return res.rooms.includes(room) && today >= checkIn && today < checkOut;\n      });\n      return {\n        room,\n        status: isReserved ? 'Occupied' : 'Available'\n      };\n    });\n    setAvailability(avail);\n  }, [reservations]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Room Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"5\",\n      cellSpacing: \"0\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: availability.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.room\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, item.room, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomAvailability, \"llQ/6P3ZzZ8JNK6oLn3LigEr/r0=\");\n_c = RoomAvailability;\nexport default RoomAvailability;\nvar _c;\n$RefreshReg$(_c, \"RoomAvailability\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","RoomAvailability","_s","reservations","setReservations","availability","setAvailability","hotelRooms","get","then","response","data","catch","error","console","today","Date","avail","map","room","isReserved","some","res","checkIn","checkOut","rooms","includes","status","children","fileName","_jsxFileName","lineNumber","columnNumber","border","cellPadding","cellSpacing","item","_c","$RefreshReg$"],"sources":["/Users/mosesle/Desktop/afc-housekeeping-project/frontend/src/RoomAvailability.js"],"sourcesContent":["// frontend/src/RoomAvailability.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction RoomAvailability() {\n  const [reservations, setReservations] = useState([]);\n  const [availability, setAvailability] = useState([]);\n\n  // List of all hotel rooms\n  const hotelRooms = [\n    '105', '107', '109',\n    '110', '111', '112', '113', '114', '115', '116', '117', '118', '119', '120',\n    '205', '206', '207', '208', '209', '210', '211', '212', '213', '214', '215', '216', '217', '218', '219', '220'\n  ];\n\n  // Fetch reservations from the backend\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/reservations')\n      .then(response => setReservations(response.data))\n      .catch(error => console.error('Error fetching reservations:', error));\n  }, []);\n\n  // Calculate availability for each room based on today's date\n  useEffect(() => {\n    const today = new Date();\n    const avail = hotelRooms.map(room => {\n      // Check if the room is reserved today\n      const isReserved = reservations.some(res => {\n        if (!res.checkIn || !res.checkOut) return false;\n        const checkIn = new Date(res.checkIn);\n        const checkOut = new Date(res.checkOut);\n        // If today's date is between checkIn (inclusive) and checkOut (exclusive) and the room is in the reservation's room list, it's occupied\n        return res.rooms.includes(room) && today >= checkIn && today < checkOut;\n      });\n      return {\n        room,\n        status: isReserved ? 'Occupied' : 'Available'\n      };\n    });\n    setAvailability(avail);\n  }, [reservations]);\n\n  return (\n    <div>\n      <h2>Room Availability</h2>\n      <table border=\"1\" cellPadding=\"5\" cellSpacing=\"0\">\n        <thead>\n          <tr>\n            <th>Room</th>\n            <th>Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {availability.map(item => (\n            <tr key={item.room}>\n              <td>{item.room}</td>\n              <td>{item.status}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default RoomAvailability;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}