{"ast":null,"code":"var _jsxFileName = \"/Users/mosesle/Desktop/afc-housekeeping-project/frontend/src/SummaryDashboard.js\",\n  _s = $RefreshSig$();\n// frontend/src/SummaryDashboard.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SummaryDashboard() {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch reservations from the backend\n  const fetchReservations = () => {\n    axios.get('http://localhost:5001/api/reservations').then(response => setReservations(response.data)).catch(error => console.error('Error fetching reservations:', error));\n  };\n\n  // Fetch cleaning tasks from the backend\n  const fetchTasks = () => {\n    axios.get('http://localhost:5001/api/cleaning-schedule').then(response => setTasks(response.data)).catch(error => console.error('Error fetching cleaning tasks:', error));\n  };\n  useEffect(() => {\n    fetchReservations();\n    fetchTasks();\n  }, []);\n\n  // List of all hotel rooms\n  const hotelRooms = ['105', '107', '109', '110', '111', '112', '113', '114', '115', '116', '117', '118', '119', '120', '205', '206', '207', '208', '209', '210', '211', '212', '213', '214', '215', '216', '217', '218', '219', '220'];\n\n  // Calculate occupancy for today using checkIn and checkOut dates\n  const todayStr = new Date().toISOString().slice(0, 10);\n  const today = new Date(todayStr);\n  let occupiedRooms = 0;\n  reservations.forEach(res => {\n    if (res.checkIn && res.checkOut) {\n      const checkIn = new Date(res.checkIn);\n      const checkOut = new Date(res.checkOut);\n      if (today >= checkIn && today < checkOut) {\n        occupiedRooms += res.rooms.length;\n      }\n    }\n  });\n  const totalRooms = hotelRooms.length;\n  const occupancyRate = (occupiedRooms / totalRooms * 100).toFixed(2);\n\n  // Calculate cleaning tasks status\n  const completedTasks = tasks.filter(task => task.completed).length;\n  const pendingTasks = tasks.length - completedTasks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Summary Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Reservations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 12\n        }, this), \" \", reservations.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Cleaning Tasks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 12\n        }, this), \" \", tasks.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Completed Cleaning Tasks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 12\n        }, this), \" \", completedTasks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Pending Cleaning Tasks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 12\n        }, this), \" \", pendingTasks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Occupancy Rate:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 12\n        }, this), \" \", occupancyRate, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(SummaryDashboard, \"xo0E2TR4FWyK0c6CyXfq9yGxbyM=\");\n_c = SummaryDashboard;\nexport default SummaryDashboard;\nvar _c;\n$RefreshReg$(_c, \"SummaryDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","SummaryDashboard","_s","reservations","setReservations","tasks","setTasks","fetchReservations","get","then","response","data","catch","error","console","fetchTasks","hotelRooms","todayStr","Date","toISOString","slice","today","occupiedRooms","forEach","res","checkIn","checkOut","rooms","length","totalRooms","occupancyRate","toFixed","completedTasks","filter","task","completed","pendingTasks","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mosesle/Desktop/afc-housekeeping-project/frontend/src/SummaryDashboard.js"],"sourcesContent":["// frontend/src/SummaryDashboard.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction SummaryDashboard() {\n  const [reservations, setReservations] = useState([]);\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch reservations from the backend\n  const fetchReservations = () => {\n    axios.get('http://localhost:5001/api/reservations')\n      .then(response => setReservations(response.data))\n      .catch(error => console.error('Error fetching reservations:', error));\n  };\n\n  // Fetch cleaning tasks from the backend\n  const fetchTasks = () => {\n    axios.get('http://localhost:5001/api/cleaning-schedule')\n      .then(response => setTasks(response.data))\n      .catch(error => console.error('Error fetching cleaning tasks:', error));\n  };\n\n  useEffect(() => {\n    fetchReservations();\n    fetchTasks();\n  }, []);\n\n  // List of all hotel rooms\n  const hotelRooms = [\n    '105', '107', '109',\n    '110', '111', '112', '113', '114', '115', '116', '117', '118', '119', '120',\n    '205', '206', '207', '208', '209', '210', '211', '212', '213', '214', '215', '216', '217', '218', '219', '220'\n  ];\n\n  // Calculate occupancy for today using checkIn and checkOut dates\n  const todayStr = new Date().toISOString().slice(0, 10);\n  const today = new Date(todayStr);\n  let occupiedRooms = 0;\n  reservations.forEach(res => {\n    if (res.checkIn && res.checkOut) {\n      const checkIn = new Date(res.checkIn);\n      const checkOut = new Date(res.checkOut);\n      if (today >= checkIn && today < checkOut) {\n        occupiedRooms += res.rooms.length;\n      }\n    }\n  });\n  const totalRooms = hotelRooms.length;\n  const occupancyRate = ((occupiedRooms / totalRooms) * 100).toFixed(2);\n\n  // Calculate cleaning tasks status\n  const completedTasks = tasks.filter(task => task.completed).length;\n  const pendingTasks = tasks.length - completedTasks;\n\n  return (\n    <div>\n      <h2>Summary Dashboard</h2>\n      <div>\n        <p><strong>Total Reservations:</strong> {reservations.length}</p>\n        <p><strong>Total Cleaning Tasks:</strong> {tasks.length}</p>\n        <p><strong>Completed Cleaning Tasks:</strong> {completedTasks}</p>\n        <p><strong>Pending Cleaning Tasks:</strong> {pendingTasks}</p>\n        <p><strong>Current Occupancy Rate:</strong> {occupancyRate}%</p>\n      </div>\n    </div>\n  );\n}\n\nexport default SummaryDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}