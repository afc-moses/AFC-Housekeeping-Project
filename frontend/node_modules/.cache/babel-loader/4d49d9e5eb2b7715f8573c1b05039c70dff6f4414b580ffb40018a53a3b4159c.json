{"ast":null,"code":"var _jsxFileName = \"/Users/mosesle/Desktop/afc-housekeeping-project/frontend/src/UpcomingCleaningTasks.js\",\n  _s = $RefreshSig$();\n// frontend/src/UpcomingCleaningTasks.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpcomingCleaningTasks() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch cleaning tasks from the backend when the component mounts\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/cleaning-schedule').then(response => setTasks(response.data)).catch(error => console.error('Error fetching cleaning tasks:', error));\n  }, []);\n\n  // Get today's date (set time to 00:00:00 for consistency)\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n\n  // Calculate target date as 7 days from today\n  const targetDate = new Date(today);\n  targetDate.setDate(today.getDate() + 7);\n\n  // Filter tasks that are scheduled within the next week (inclusive)\n  const upcomingTasks = tasks.filter(task => {\n    const taskDate = new Date(task.cleaningDate);\n    // Ensure taskDate is within [today, targetDate]\n    return taskDate >= today && taskDate <= targetDate;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '800px',\n      margin: 'auto',\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        color: '#333'\n      },\n      children: \"Upcoming Cleaning Tasks (Next 7 Days)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), upcomingTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"No cleaning tasks scheduled in the next 7 days.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '20px',\n        justifyContent: 'center'\n      },\n      children: upcomingTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          borderRadius: '8px',\n          padding: '15px',\n          width: '280px',\n          boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n          backgroundColor: '#fff'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0 0 10px',\n            color: '#007BFF'\n          },\n          children: [\"Room \", task.room]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '5px 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), \" \", task.cleaningDate, \" 11:00 AM\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '5px 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), \" \", task.completed ? 'Completed' : 'Pending']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, task.taskId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(UpcomingCleaningTasks, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = UpcomingCleaningTasks;\nexport default UpcomingCleaningTasks;\nvar _c;\n$RefreshReg$(_c, \"UpcomingCleaningTasks\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UpcomingCleaningTasks","_s","tasks","setTasks","get","then","response","data","catch","error","console","today","Date","setHours","targetDate","setDate","getDate","upcomingTasks","filter","task","taskDate","cleaningDate","style","maxWidth","margin","padding","fontFamily","children","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","length","display","flexWrap","gap","justifyContent","map","border","borderRadius","width","boxShadow","backgroundColor","room","completed","taskId","_c","$RefreshReg$"],"sources":["/Users/mosesle/Desktop/afc-housekeeping-project/frontend/src/UpcomingCleaningTasks.js"],"sourcesContent":["// frontend/src/UpcomingCleaningTasks.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UpcomingCleaningTasks() {\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch cleaning tasks from the backend when the component mounts\n  useEffect(() => {\n    axios.get('http://localhost:5001/api/cleaning-schedule')\n      .then(response => setTasks(response.data))\n      .catch(error => console.error('Error fetching cleaning tasks:', error));\n  }, []);\n\n  // Get today's date (set time to 00:00:00 for consistency)\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n\n  // Calculate target date as 7 days from today\n  const targetDate = new Date(today);\n  targetDate.setDate(today.getDate() + 7);\n\n  // Filter tasks that are scheduled within the next week (inclusive)\n  const upcomingTasks = tasks.filter(task => {\n    const taskDate = new Date(task.cleaningDate);\n    // Ensure taskDate is within [today, targetDate]\n    return taskDate >= today && taskDate <= targetDate;\n  });\n\n  return (\n    <div style={{ maxWidth: '800px', margin: 'auto', padding: '20px', fontFamily: 'Arial, sans-serif' }}>\n      <h2 style={{ textAlign: 'center', color: '#333' }}>\n        Upcoming Cleaning Tasks (Next 7 Days)\n      </h2>\n      {upcomingTasks.length === 0 ? (\n        <p style={{ textAlign: 'center' }}>\n          No cleaning tasks scheduled in the next 7 days.\n        </p>\n      ) : (\n        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '20px', justifyContent: 'center' }}>\n          {upcomingTasks.map(task => (\n            <div key={task.taskId} style={{\n              border: '1px solid #ccc',\n              borderRadius: '8px',\n              padding: '15px',\n              width: '280px',\n              boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n              backgroundColor: '#fff'\n            }}>\n              <h3 style={{ margin: '0 0 10px', color: '#007BFF' }}>Room {task.room}</h3>\n              <p style={{ margin: '5px 0' }}>\n                <strong>Date:</strong> {task.cleaningDate} 11:00 AM\n              </p>\n              <p style={{ margin: '5px 0' }}>\n                <strong>Status:</strong> {task.completed ? 'Completed' : 'Pending'}\n              </p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default UpcomingCleaningTasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}